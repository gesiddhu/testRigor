# This is a basic workflow to help you get started with Actions

name: testRigor

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runner's shell
      - name: Run a multi-line script
        run: |
    
                curl -X POST \
                -H 'Content-type: application/json' \
                -H 'auth-token: 02f58bff-7e13-47d7-8e4b-dc9f6e833985' \
                --data '{"forceCancelPreviousTesting":true,"storedValues":{"storedValueName1":"Value"}}' \
                https://api.testrigor.com/api/v1/apps/ukecWYsrpDQXK7otn/retest
              
              sleep 10
              
              while true
              do
                echo " "
                echo "==================================="
                echo " Checking TestRigor retest"
                echo "==================================="
                response=$(curl -i -o - -s -X GET 'https://api.testrigor.com/api/v1/apps/ukecWYsrpDQXK7otn/status' -H 'auth-token: 02f58bff-7e13-47d7-8e4b-dc9f6e833985' -H 'Accept: application/json')
                code=$(echo "$response" | grep HTTP |  awk '{print $2}')
                body=$(echo "$response" | sed -n '/{/,/}/p')
                echo "Status code: " $code
                echo "Response: " $body
                case $code in
                  4*|5*)
                    # 400 or 500 errors
                    echo "Error calling API"
                    exit 1
                    ;;
                  200)
                    # 200: successfully finished
                    echo "Test finished successfully"
                    exit 0
                    ;;
                  227|228)
                    # 227: New - 228: In progress
                    echo "Test is not finished yet"
                    ;;
                  230)
                    # 230: Failed
                    echo "Test finished but failed"
                    exit 1
                    ;;
                  *)
                    echo "Unknown status"
                    exit 1
                  esac
                sleep 10
              done
